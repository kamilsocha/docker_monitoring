version: "3.5"

volumes:
  managementdb:
  prometheus_data: {}
  grafana_data: {}

networks:
  management:
    name: management

services:
  apigateway:
    image: ks10096/management-gateway
    build: ../management/management-apigateway
    container_name: managementgateway
    env_file: ./.env
    environment:
      - API_URI=managementdockerclient:8080

      - AUTH_URI=auth-service:8080
      - SYSTEMS_CONFIG_URI=systems-config-service:8080

      - APP_URI=managementapp:80
      - PROMETHEUS=prometheus:9090
      - GRAFANA=grafana:3000
    networks:
      management:
    ports:
      - "8080:8080"
    labels:
      pl.polsl.student.name: "management-gateway"
      pl.polsl.student.systembelongto.name: "management"

      pl.polsl.student.type: "infra"
      pl.polsl.student.type.infra: "ms"
      pl.polsl.student.type.infra.subtype: "apigateway"

  auth-service:
    image: ks10096/management-auth-service
    build: ../management/auth-service
    env_file: ./.env
    environment:
      - DB_SERVER=managementDb
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_MANAGEMENT_DB}
    networks:
      management:
    depends_on:
      - managementDb
    labels:
      pl.polsl.student.name: "management-auth-service"
      pl.polsl.student.systembelongto.name: "management"

      pl.polsl.student.type: "infra"
      pl.polsl.student.type.infra: "ms"
      pl.polsl.student.type.infra.subtype: "auth"

  systems-config-service:
    image: ks10096/management-systems-config-service
    build: ../management/systems-configuration-service
    env_file: ./.env
    environment:
      - CONFIG_FILE_PATH=/systemsConfig.json
    networks:
      management:
    volumes:
      - type: bind
        source: ./systemsConfig.json
        target: /systemsConfig.json
    labels:
      pl.polsl.student.name: "management-systems-config-service"
      pl.polsl.student.systembelongto.name: "management"

      pl.polsl.student.type: "infra"
      pl.polsl.student.type.infra: "ms"
      pl.polsl.student.type.infra.subtype: "config"

  managementapp:
    image: ks10096/management-app
    build: ../management/java-docker-api-broker-client
    networks:
      management:
    labels:
      pl.polsl.student.name: "docker-management-client"
      pl.polsl.student.systembelongto.name: "management"

      pl.polsl.student.type: "infra"
      pl.polsl.student.type.infra: "gui"

  managementdockerclient:
    image: ks10096/management-docker-client
    build: ../management/java-docker-api-broker
    # when using default connection over docker socket
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock # working on both linux and windows
    env_file: ./.env
    environment:
      # working configuration to connect over tcp on windows
      # - PROTOCOL=tcp://
      # - HOST_ADDRESS=172.17.0.1
      # - HOST_ADDRESS=host.docker.internal windows
      # - HOST_PORT=2375
      - DOCKER_HOST=unix:///var/run/docker.sock
      - CERT_VERIFY=false
    networks:
      management:
    labels:
      pl.polsl.student.name: "management-api"
      pl.polsl.student.systembelongto.name: "management"

      pl.polsl.student.type: "infra"
      pl.polsl.student.type.infra: "ms"
      pl.polsl.student.type.infra.subtype: "other(none)"

  managementDb:
    image: postgres:alpine
    restart: always
    volumes:
      - managementdb:/var/lib/postgresql/data:rw
      - ./init_managementdb.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      management:
    env_file: ./.env
    environment:
      - POSTGRES_DB=${POSTGRES_MANAGEMENT_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - PGDATA=/var/lib/postgresql/data
    deploy:
      resources:
        limits:
          memory: 1000M
    labels:
      pl.polsl.student.name: "management-database"
      pl.polsl.student.systembelongto.name: "management"

      pl.polsl.student.type: "infra"
      pl.polsl.student.type.infra: "db"

  # prometheus:
  #   image: prom/prometheus:latest
  #   volumes:
  #     - ./prometheus.yml:/etc/prometheus/prometheus.yml
  #     - type: bind
  #       source: ./targets.json
  #       target: /etc/prometheus/targets.json
  #     - prometheus_data:/prometheus
  #   command:
  #     - "--config.file=/etc/prometheus/prometheus.yml"
  #   networks:
  #     management:
  #   ports:
  #     - "9090:9090"

  # node-exporter:
  #   image: prom/node-exporter
  #   networks:
  #     management:
  #   ports:
  #     - "9100:9100"

  # grafana:
  #   image: grafana/grafana:latest
  #   networks:
  #     management:
  #   ports:
  #     - "5000:3000"
  #   environment:
  #     - GF_SECURITY_ADMIN_PASSWORD=pass
  #   volumes:
  #     - ./grafana.ini:/etc/grafana/grafana.ini
  #     # - ./datasource.yaml:/etc/grafana/provisioning/datasources/datasource.yaml
  #     - grafana_data:/var/lib/grafana
