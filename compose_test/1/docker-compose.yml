version: "3"

volumes:
  moviedb:
  userdb:

networks:
  back:
  front:

services:
  discovery:
    image: sochakamil/discovery-server
    container_name: discovery
    restart: always
    ports:
      - "8761:8761"
    env_file: ./.env
    networks:
      - back
    deploy:
      resources:
        limits:
          memory: 350M

  config-server:
    image: sochakamil/config-server
    restart: always
    env_file: ./.env
    environment:
      - EUREKA_URI=http://${DISCOVERY_NAME}:${DISCOVERY_PORT}/eureka
      - SPRING_SECURITY_USER_NAME=${CONFIG_SERVER_USR}
      - SPRING_SECURITY_USER_PASSWORD=${CONFIG_SERVER_PWD}
    networks:
      - back
    depends_on:
      - discovery
    volumes:
      - type: bind
        source: ../../config-server/src/main/resources/configs
        target: /app/config
    ports:
      - "8888:8888"
    deploy:
      resources:
        limits:
          memory: 350M

  apigateway:
    image: sochakamil/edge-server
    container_name: apigateway
    restart: always
    ports:
      - "8080:8080"
    env_file: ./.env
    environment:
      - EUREKA_URI=http://${DISCOVERY_NAME}:${DISCOVERY_PORT}/eureka
      - CONFIG_SERVER_USER=${CONFIG_SERVER_USR}
      - CONFIG_SERVER_PASSWORD=${CONFIG_SERVER_PWD}
    networks:
      - back
      - front
    depends_on:
      - discovery
    deploy:
      resources:
        limits:
          memory: 350M

  movieclient:
    # image: sochakamil/movies-api-client
    image: test/movies-api-client
    container_name: movieclient
    # ports:
    #   - "80:80"
    networks:
      - front

  # userCatalog:
  #   image: microservices/user-movies-catalog-service
  #   restart: always
  #   env_file: ./.env
  #   environment:
  #     - EUREKA_URI=http://${DISCOVERY_NAME}:${DISCOVERY_PORT}/eureka
  #     - CONFIG_SERVER_USER=${CONFIG_SERVER_USR}
  #     - CONFIG_SERVER_PASSWORD=${CONFIG_SERVER_PWD}
  #   networks:
  #     - back
  #   depends_on:
  #     - discovery
  #     - config-server
  #   deploy:
  #     resources:
  #       limits:
  #         memory: 350M

  # movies:
  #   image: microservices/movie-service
  #   restart: always
  #   env_file: ./.env
  #   environment:
  #     - EUREKA_URI=http://${DISCOVERY_NAME}:${DISCOVERY_PORT}/eureka
  #     - DB_SERVER=movieDb
  #     - POSTGRES_USER=postgres
  #     - POSTGRES_PASSWORD=1234
  #     - POSTGRES_DB=${POSTGRES_MOVIE_DB}
  #     - CONFIG_SERVER_USER=${CONFIG_SERVER_USR}
  #     - CONFIG_SERVER_PASSWORD=${CONFIG_SERVER_PWD}
  #   networks:
  #     - back
  #   depends_on:
  #     - discovery
  #     - config-server
  #     - movieDb
  #   links:
  #     - movieDb
  #   volumes:
  #     - ./uploadsVolume:/app/uploads
  #   deploy:
  #     resources:
  #       limits:
  #         memory: 350M

  # users:
  #   image: microservices/user-service
  #   restart: always
  #   container_name: users
  #   env_file: ./.env
  #   environment:
  #     - EUREKA_URI=http://${DISCOVERY_NAME}:${DISCOVERY_PORT}/eureka
  #     - DB_SERVER=userDb
  #     - POSTGRES_USER=${POSTGRES_USER}
  #     - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
  #     - POSTGRES_DB=${POSTGRES_USER_DB}
  #     - CONFIG_SERVER_USER=${CONFIG_SERVER_USR}
  #     - CONFIG_SERVER_PASSWORD=${CONFIG_SERVER_PWD}
  #   networks:
  #     - back
  #   depends_on:
  #     - discovery
  #     - userDb
  #   links:
  #     - userDb
  #   deploy:
  #     resources:
  #       limits:
  #         memory: 350M

  # userDb:
  #   image: postgres:alpine
  #   restart: always
  #   container_name: userDb
  #   volumes:
  #     - userdb:/var/lib/postgresql/data:rw
  #   ports:
  #     - "5435:5432"
  #   env_file: ./.env
  #   environment:
  #     - POSTGRES_DB=${POSTGRES_USER_DB}
  #     - POSTGRES_USER=${POSTGRES_USER}
  #     - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
  #     - PGDATA=/var/lib/postgresql/data
  #   networks:
  #     - back

  # converter:
  #   image: microservices/converter-service
  #   restart: always
  #   env_file: ./.env
  #   environment:
  #     - EUREKA_URI=http://${DISCOVERY_NAME}:${DISCOVERY_PORT}/eureka
  #     - CONFIG_SERVER_USER=${CONFIG_SERVER_USR}
  #     - CONFIG_SERVER_PASSWORD=${CONFIG_SERVER_PWD}
  #   depends_on:
  #     - discovery
  #     - config-server
  #   networks:
  #     - back
  #   deploy:
  #     resources:
  #       limits:
  #         # cpus: '0.1'
  #         memory: 350M

  # movieDb:
  #   image: postgres:alpine
  #   restart: always
  #   container_name: movieDb
  #   volumes:
  #     - moviedb:/var/lib/postgresql/data:rw
  #   ports:
  #     - "5433:5432"
  #   env_file: ./.env
  #   environment:
  #     - POSTGRES_DB=${POSTGRES_MOVIE_DB}
  #     - POSTGRES_USER=${POSTGRES_USER}
  #     - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
  #     - PGDATA=/var/lib/postgresql/data
  #   networks:
  #     - back
