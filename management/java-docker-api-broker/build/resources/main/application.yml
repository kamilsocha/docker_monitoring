spring:
  application:
    name: java-docker-api-broker

security:
  username: ${MANAGEMENT_USERNAME:user}
  password: ${MANAGEMENT_PASSWORD:password}

server:
  port: 8001

management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    shutdown:
      enabled: true
    health:
      show-details: always

swagger:
  title: ${spring.application.name}
  description: Broker for Client App communicating with Docker API.
  license: License
  licenseUrl: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 0.1
  contact:
    name: Kamil Socha
    url:
    email: kamisoc782@student.polsl.pl

info:
  app:
    name: ${spring.application.name}
    description: Broker for Client App communicating with Docker API.
    version: 0.1.0
  developer:
    name: Kamil Socha
    email: kamisoc782@student.polsl.pl
  params:
    dockerclient:
      host:
        protocol: tcp://, unix:///
        address: Specify host where docker is running e.g. kamil-ubuntu or 192.168.254.119
        port: 2375, 2376
      cert:
        verify: true/false, choose http or https
        path: Path to certs, classpath:/certs

dockerclient:
  host:
    protocol: ${PROTOCOL:}
    address: ${HOST_ADDRESS:}
    port: ${HOST_PORT:}
  cert:
    verify: ${CERT_VERIFY:false}
    path: ${CERT_PATH:}
  api:
    version: ${API_VERSION:}
  registry:
    uri: ${REGISTRY_URI:}
    username: ${REGISTRY_USERNAME:}
    password: ${REGISTRY_PASSWORD:}
    email: ${REGISTRY_EMAIL:}

---
spring:
  config:
    activate:
      on-profile: docker
  datasource:
    url: jdbc:postgresql://${DB_SERVER}:5432/${POSTGRES_DB}
    username: ${POSTGRES_USER}
    password: ${POSTGRES_PASSWORD}
server:
  port: 8080
