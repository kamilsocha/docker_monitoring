version: "3"

networks:
  back:

volumes:
  moviedb:
  ratingdb:
  userdb:

services:
  # config-server:
  #   environment:
  #     - EUREKA_URI=http://${DISCOVERY_NAME}:${DISCOVERY_PORT}/eureka
  #     - SPRING_PROFILES_ACTIVE=docker,native
  #     - ENCRYPT_KEY=${CONFIG_SERVER_ENCRYPT_KEY}
  #     - SPRING_SECURITY_USER_NAME=${CONFIG_SERVER_USR}
  #     - SPRING_SECURITY_USER_PASSWORD=${CONFIG_SERVER_PWD}
  #   volumes:
  #     - config-repo:/config-repo
  #   build: spring-cloud/config-server
  #   mem_limit: 350m

  discovery:
    image: microservices/discovery-server
    ports:
      - "8761:8761"
    env_file: ./.env
    networks:
      - back

  apigateway:
    image: microservices/edge-server
    ports:
      - "8080:8080"
    env_file: ./.env
    environment:
      - EUREKA_URI=http://${DISCOVERY_NAME}:${DISCOVERY_PORT}/eureka
    networks:
      - back
    depends_on:
      - discovery

  userCatalog:
    image: microservices/user-movies-catalog-service
    env_file: ./.env
    environment:
      - EUREKA_URI=http://${DISCOVERY_NAME}:${DISCOVERY_PORT}/eureka
    depends_on:
      - discovery
    networks:
      - back

  movies:
    image: microservices/movie-service
    env_file: ./.env
    environment:
      - EUREKA_URI=http://${DISCOVERY_NAME}:${DISCOVERY_PORT}/eureka
      - DB_SERVER=movieDb
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=1234
      - POSTGRES_DB=${POSTGRES_MOVIE_DB}
    depends_on:
      - discovery
      - movieDb
    links:
      - movieDb
    networks:
      - back

  ratings:
    image: microservices/rating-service
    env_file: ./.env
    environment:
      - EUREKA_URI=http://${DISCOVERY_NAME}:${DISCOVERY_PORT}/eureka
      - DB_SERVER=ratingDb
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=1234
      - POSTGRES_DB=${POSTGRES_RATING_DB}
    depends_on:
      - discovery
      - ratingDb
    links:
      - ratingDb
    networks:
      - back

  users:
    image: microservices/user-service
    env_file: ./.env
    environment:
      - EUREKA_URI=http://${DISCOVERY_NAME}:${DISCOVERY_PORT}/eureka
      - DB_SERVER=userDb
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_USER_DB}
    depends_on:
      - discovery
      - userDb
    links:
      - userDb
    networks:
      - back

  converter:
    image: microservices/converter-service
    env_file: ./.env
    environment:
      - EUREKA_URI=http://${DISCOVERY_NAME}:${DISCOVERY_PORT}/eureka
    depends_on:
      - discovery
    networks:
      - back

  movieDb:
    image: postgres:alpine
    container_name: movieDb
    volumes:
      - moviedb:/var/lib/postgresql/data:rw
    ports:
      - "5433:5432"
    env_file: ./.env
    environment:
      - POSTGRES_DB=${POSTGRES_MOVIE_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - PGDATA=/var/lib/postgresql/data
    networks:
      - back

  ratingDb:
    image: postgres:alpine
    container_name: ratingDb
    volumes:
      - ratingdb:/var/lib/postgresql/data:rw
    ports:
      - "5434:5432"
    env_file: ./.env
    environment:
      - POSTGRES_DB=${POSTGRES_RATING_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - PGDATA=/var/lib/postgresql/data
    networks:
      - back

  userDb:
    image: postgres:alpine
    container_name: userDb
    volumes:
      - userdb:/var/lib/postgresql/data:rw
    ports:
      - "5435:5432"
    env_file: ./.env
    environment:
      - POSTGRES_DB=${POSTGRES_USER_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - PGDATA=/var/lib/postgresql/data
    networks:
      - back
